---
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Looking for install in {{ fdb_install_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ fdb_install_dir }}'
  changed_when: false
  register: fdb_bin_dir
- name: Downloading and installing foundationdb
  when: not fdb_bin_dir.stat.exists
  block:
    - name: Downloading {{ fdb_tgz_url }}
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ fdb_tgz_url }}'
        dest: '{{ fdb_tmp_tgz }}'
        checksum: '{{ fdb_checksum }}'
        mode: '644'
    - name: Mkdir {{ fdb_install_dir }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ fdb_install_dir }}'
        state: directory
        mode: '755'
    - name: Installing andrewrothstein.unarchivedeps
      ansible.builtin.include_role:
        name: andrewrothstein.unarchivedeps
    - name: Unarchiving {{ fdb_tmp_tgz }} into {{ fdb_install_dir }}
      become: true
      become_user: root
      ansible.builtin.unarchive:
        src: '{{ fdb_tmp_tgz }}'
        dest: '{{ fdb_install_dir }}'
        mode: '755'
        creates: '{{ fdb_install_dir }}/fdb_binaries'
  always:
    - name: Rm {{ fdb_tmp_tgz }}
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ fdb_tmp_tgz }}'
        state: absent
- name: Link
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ fdb_install_dir }}'
    dest: '{{ fdb_link_dir }}'
    state: link
- name: Add to login shell path
  become: true
  become_user: root
  with_items:
    - d: /etc/profile.d
      f: fdb.sh
  ansible.builtin.template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
    mode: '{{ item.m | default("644") }}'
